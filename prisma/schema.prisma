generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

/// This model has been renamed to 'Renamedclass' during introspection, because the original name 'class' is reserved.
model Renamedclass {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subject      String       @db.VarChar(255)
  date_time    DateTime     @db.Timestamp(6)
  duration     Int
  tutor_id     String       @db.Uuid
  institute_id String       @db.Uuid
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  institute    institute    @relation(fields: [institute_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  tutor        tutor        @relation(fields: [tutor_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  enrollment   enrollment[]

  @@map("class")
}

model enrollment {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  class_id        String       @db.Uuid
  student_id      String       @db.Uuid
  enrollment_date DateTime     @db.Timestamp(6)
  status          String       @db.VarChar(255)
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  Renamedclass    Renamedclass @relation(fields: [class_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  student         student      @relation(fields: [student_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model institute {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  Renamedclass Renamedclass[]
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model student {
  id                 String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  grade              Int
  school_name        String       @db.VarChar(255)
  preferred_subjects String       @db.VarChar(255)
  user_id            String       @db.Uuid
  created_at         DateTime     @default(now()) @db.Timestamp(6)
  updated_at         DateTime     @default(now()) @db.Timestamp(6)
  enrollment         enrollment[]
  user               user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model tutor {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  experience     Int
  qualification  String         @db.VarChar(255)
  specialization String         @db.VarChar(255)
  availability   String         @db.VarChar(255)
  user_id        String         @db.Uuid
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  Renamedclass   Renamedclass[]
  user           user           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  institute   institute[]
  student     student[]
  tutor       tutor[]
}
